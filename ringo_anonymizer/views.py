from ringo.views.request import (
    handle_params,
    handle_history,
    is_confirmed,
    get_item_from_request
)
from ringo.lib.renderer import ConfirmDialogRenderer
from ringo.views.base import set_web_action_view
from ringo.views.base.list_ import set_bundle_action_handler


# Define your custom views here or overwrite the default views. Default
# CRUD operations are generated by the ringo frameworkd.

def anonymize(request):
    handle_history(request)
    handle_params(request)
    item = get_item_from_request(request)
    return _handle_anonymize_request(request, [item])


def _handle_anonymize_request(request, items):
    _ = request.translate
    clazz = request.context.__model__
    modul = request.context.__modul__
    renderer = ConfirmDialogRenderer(request, clazz, _("anonymize"))
    if (request.method == 'POST'
        and is_confirmed(request)):
        for item in items:
            item.anonymize()
    rvalue = {}
    rvalue['dialog'] = renderer.render(items)
    return rvalue

# Register the view and request handlers.
set_web_action_view("anonymize", anonymize)
set_bundle_action_handler("anonymize", _handle_anonymize_request)
